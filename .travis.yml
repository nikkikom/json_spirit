language: cpp

git:
 depth: 3

env:
  global:
    - BOOST_INCLUDES=$HOME/Libraries/include
    - BOOST_LIBS=$HOME/Libraries/lib
    - BOOST_V=1_61_0
    - BOOST_VV=1.61.0

cache:
 directories: boost_${BOOST_V}

sudo: no

# Save common build configurations as shortcuts, so we can reference them later.
addons_shortcuts:
  addons_clang35: &clang35
    apt:
      sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5' ]
      packages: [ 'clang-3.5', 'llvm-3.5-dev' ]
  addons_clang36: &clang36
    apt:
      sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6' ]
      packages: [ 'clang-3.6' ]
  addons_clang37: &clang37
    apt:
      sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7' ]
      packages: [ 'clang-3.7' ]
  addons_clang38: &clang38
    apt:
      sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.8' ]
      packages: [ 'clang-3.8']
  addons_clang39: &clang39
    apt:
      sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise' ]
      packages: [ 'clang-3.9']
  addons_gcc47: &gcc47
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-4.7' ]
  addons_gcc48: &gcc48
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-4.8' ]
  addons_gcc49: &gcc49
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-4.9' ]
  addons_gcc5: &gcc5
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-5' ]
  addons_gcc5: &gcc6
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-6' ]

matrix:
  include:
    - os: osx
      osx_image: xcode8
      env: CXXFLAGS="-std=c++14 -pipe"
      compiler: clang
    - os: osx
      osx_image: xcode7.3
      env: CXXFLAGS="-std=c++14 -pipe"
      compiler: clang
    - os: osx
      osx_image: xcode7.2
      env: CXXFLAGS="-std=c++14 -pipe"
      compiler: clang
    - os: osx
      osx_image: xcode7
      env: CXXFLAGS="-std=c++14 -pipe"
      compiler: clang
    - os: osx
      osx_image: xcode6
      env: CXXFLAGS="-std=c++14 -pipe"
      compiler: clang
    - os: linux
      compiler: "clang35"
      env: CXX=clang++-3.5 CXXFLAGS="-std=c++14 -pipe"
      addons: *clang35
    - os: linux
      compiler: "clang36"
      env: CXX=clang++-3.6 CXXFLAGS="-std=c++14 -pipe"
      addons: *clang36
    - os: linux
      compiler: "clang37"
      env: CXX=clang++-3.7 CXXFLAGS="-std=c++14 -pipe"
      addons: *clang37
    - os: linux
      compiler: "clang38"
      env: CXX=clang++-3.8 CXXFLAGS="-std=c++14 -pipe"
      addons: *clang38
    - os: linux
      compiler: "clang39"
      env: CXX=clang++-3.9 CXXFLAGS="-std=c++14 -pipe"
      addons: *clang39
    - os: linux
      compiler: "gcc47"
      env: CXX=g++-4.7 CXXFLAGS="-std=c++14 -pipe"
      addons: *gcc47
    - os: linux
      compiler: "gcc48"
      env: CXX=g++-4.8 CXXFLAGS="-std=c++14 -pipe"
      addons: *gcc48
    - os: linux
      compiler: "gcc49"
      env: CXX=g++-4.9 CXXFLAGS="-std=c++14 -pipe"
      addons: *gcc49
    - os: linux
      compiler: "gcc5"
      env: CXX=g++-5 CXXFLAGS="-std=c++14 -pipe"
      addons: *gcc5
    - os: linux
      compiler: "gcc6"
      env: CXX=g++-6 CXXFLAGS="-std=c++14 -pipe"
      addons: *gcc6

before_install:
 - echo ${CXX} ${CXXFLAGS}
 - mkdir Downloads Libraries
 - cd Downloads
 - wget -O - http://sourceforge.net/projects/boost/files/boost/${BOOST_VV}/boost_${BOOST_V}.tar.gz/download | tar zxf -
 - cd boost_${BOOST_V}/
 - bash bootstrap.sh --prefix=$HOME/Libraries --with-libraries=system,chrono,thread,regex,date_time,atomic,thread,test,random,coroutine
 - ./b2 variant=release link=static threading=multi runtime-link=shared -j 4 -d0 install
 - cd ../..

script:
 - scons

notifications:
 recipients:
  - nikkikom@gmail.com
 email:
  on_success: change
  on_failure: always
